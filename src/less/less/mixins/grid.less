// Grid system
//
// Generate semantic grid columns with these mixins.

// Centered container element
.container-fixed(@gutter: @grid-gutter-width) {
    margin-right: auto;
    margin-left: auto;
    padding-left: (@gutter / 2);
    padding-right: (@gutter / 2);
    &:extend(.clearfix all);
}

// Creates a wrapper for a series of columns
.make-row(@gutter: @grid-gutter-width) {
    margin-left: (@gutter / -2);
    margin-right: (@gutter / -2);
    &:extend(.clearfix all);
}


// Get column width
.get-column-width(@columns) {
    width: percentage((@columns / @grid-columns));
}

// Get column gutters
.get-column-gutters(@gutter: @grid-gutter-width) {
    padding-left: (@gutter / 2);
    padding-right: (@gutter / 2);
}


// Generate xs column box
.make-xs-column-box(@columns; @gutter: @grid-gutter-width) {
    .get-column-width(@columns);
    .get-column-gutters(@gutter);
}


// Generate the extra small columns
.make-xs-column(@columns; @gutter: @grid-gutter-width) {
    position: relative;
    float: left;
    .get-column-width(@columns);
    min-height: 1px;
    .get-column-gutters(@gutter);
}

.make-xs-column-offset(@columns) {
    margin-left: percentage((@columns / @grid-columns));
}

.make-xs-column-push(@columns) {
    left: percentage((@columns / @grid-columns));
}

.make-xs-column-pull(@columns) {
    right: percentage((@columns / @grid-columns));
}


// Generate sm column box
.make-sm-column-box(@columns; @gutter: @grid-gutter-width) {
    .get-column-gutters(@gutter);

    @media (min-width: @screen-sm-min) {
        .get-column-width(@columns);
    }
}

// Generate the small columns
.make-sm-column(@columns; @gutter: @grid-gutter-width) {
    position: relative;
    min-height: 1px;
    .get-column-gutters(@gutter);

    @media (min-width: @screen-sm-min) {
        float: left;
        .get-column-width(@columns);
    }
}
.make-sm-column-offset(@columns) {
    @media (min-width: @screen-sm-min) {
        margin-left: percentage((@columns / @grid-columns));
    }
}
.make-sm-column-push(@columns) {
    @media (min-width: @screen-sm-min) {
        left: percentage((@columns / @grid-columns));
    }
}
.make-sm-column-pull(@columns) {
    @media (min-width: @screen-sm-min) {
        right: percentage((@columns / @grid-columns));
    }
}


// Generate md column box
.make-md-column-box(@columns; @gutter: @grid-gutter-width) {
    .get-column-gutters(@gutter);

    @media (min-width: @screen-md-min) {
        .get-column-width(@columns);
    }
}

// Generate the medium columns
.make-md-column(@columns; @gutter: @grid-gutter-width) {
    position: relative;
    min-height: 1px;
    .get-column-gutters(@gutter);

    @media (min-width: @screen-md-min) {
        float: left;
        .get-column-width(@columns);
    }
}
.make-md-column-offset(@columns) {
    @media (min-width: @screen-md-min) {
        margin-left: percentage((@columns / @grid-columns));
    }
}
.make-md-column-push(@columns) {
    @media (min-width: @screen-md-min) {
        left: percentage((@columns / @grid-columns));
    }
}
.make-md-column-pull(@columns) {
    @media (min-width: @screen-md-min) {
        right: percentage((@columns / @grid-columns));
    }
}


// Generate lg column box
.make-lg-column-box(@columns; @gutter: @grid-gutter-width) {
    .get-column-gutters(@gutter);

    @media (min-width: @screen-lg-min) {
        .get-column-width(@columns);
    }
}

// Generate the large columns
.make-lg-column(@columns; @gutter: @grid-gutter-width) {
    position: relative;
    min-height: 1px;
    .get-column-gutters(@gutter);

    @media (min-width: @screen-lg-min) {
        float: left;
        .get-column-width(@columns);
    }
}
.make-lg-column-offset(@columns) {
    @media (min-width: @screen-lg-min) {
        margin-left: percentage((@columns / @grid-columns));
    }
}
.make-lg-column-push(@columns) {
    @media (min-width: @screen-lg-min) {
        left: percentage((@columns / @grid-columns));
    }
}
.make-lg-column-pull(@columns) {
    @media (min-width: @screen-lg-min) {
        right: percentage((@columns / @grid-columns));
    }
}
